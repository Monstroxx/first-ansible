---
- name: Setup Apache, Mysql (mariadb), PHP
  hosts: myvms
  become: yes
  vars:
    mysql_port: 3306
    mysql_database: test
    mysql_user: admin
    mysql_password: test1234
    mysql_root_password: root1234
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    - name: Ensure pip and packaging are installed
      apt:
        name:
          - python3-pip
          - python3-packaging
          - python3-setuptools
        state: present
        update_cache: yes

    - name: Install PyMySQL for MySQL modules
      apt:
        name: python3-pymysql
        state: present
        update_cache: yes
      become: yes

    - name: Install Apache2
      apt:
        name: apache2
        state: present
        update_cache: yes
        force_apt_get: yes
        autoclean: yes
        autoremove: yes

    - name: Install MariaDB
      apt:
        name: mariadb-server
        state: present
        update_cache: yes
        force_apt_get: yes
        autoclean: yes
        autoremove: yes
  
    - name: Install PHP and modules
      apt:
        name:
          - php-common
          - libapache2-mod-php
          - php-cli
          - php-mysql
          - php-curl
        state: present
        update_cache: yes
        force_apt_get: yes
        autoclean: yes
        autoremove: yes
    
    - name: Copy PHP info file
      template:
        src: index.php.j2
        dest: /var/www/html/index.php
        owner: www-data
        group: www-data
        mode: '0644'
    
    - name: Ensure Apache2 service is running and enabled
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Ensure MariaDB service is running and enabled
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: Ensure /root/.my.cnf exists for future logins
      copy:
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: '0600'
        content: |
          [client]
          user=root
          password={{ mysql_root_password }}

    - name: Set MySQL root password (if not already set)
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
      ignore_errors: yes  # falls schon gesetzt

    - name: Remove test database
      mysql_db:
        name: test
        state: absent

    - name: Create application database
      mysql_db:
        name: "{{ mysql_database }}"
        state: present

    - name: Create application database user
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_database }}.*:ALL"
        host: localhost
        state: present

    - name: Reboot system
      reboot:
        reboot_timeout: 60
        test_command: whoami

